{"ast":null,"code":"const i = {\n  list: []\n};\nexport const todoreducers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : i;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"AddTODO\":\n      const {\n        id,\n        data\n      } = action.payload;\n      return {\n        if() {\n          let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n        },\n\n        ...state,\n        list: [...state.list, {\n          id: id,\n          data: data\n        }]\n      };\n\n    case \"DELTODO\":\n      const newlist = state.list.filter(elem => elem.id !== action.id);\n      return { ...state,\n        list: newlist\n      };\n\n    case 'TODOREM':\n      return { ...state,\n        list: []\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/faiza/OneDrive/Desktop/reduxtodo/reduxtodo/src/reducer/reducer.js"],"names":["i","list","todoreducers","state","action","type","id","data","payload","if","newlist","filter","elem"],"mappings":"AAAA,MAAMA,CAAC,GAAC;AACJC,EAAAA,IAAI,EAAC;AADD,CAAR;AAGA,OAAO,MAAMC,YAAY,GAAC,YAAkB;AAAA,MAAjBC,KAAiB,uEAAXH,CAAW;AAAA,MAATI,MAAS;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,SAAL;AACI,YAAM;AAACC,QAAAA,EAAD;AAAMC,QAAAA;AAAN,UAAaH,MAAM,CAACI,OAA1B;AACA,aAAO;AACLC,QAAAA,EAAE,GAAY;AAAA,cAAVF,IAAU,uEAAJ,EAAI;AAEb,SAHI;;AAMH,WAAGJ,KANA;AAMMF,QAAAA,IAAI,EAAC,CACV,GAAGE,KAAK,CAACF,IADC,EAEV;AACIK,UAAAA,EAAE,EAACA,EADP;AAEHC,UAAAA,IAAI,EAACA;AAFF,SAFU;AANX,OAAP;;AAaA,SAAK,SAAL;AACA,YAAMG,OAAO,GAAMP,KAAK,CAACF,IAAN,CAAWU,MAAX,CAAmBC,IAAD,IAAQA,IAAI,CAACN,EAAL,KAAYF,MAAM,CAACE,EAA7C,CAAnB;AACI,aAAM,EAEE,GAAGH,KAFL;AAEWF,QAAAA,IAAI,EAACS;AAFhB,OAAN;;AAKA,SAAK,SAAL;AACI,aAAM,EACF,GAAGP,KADD;AACQF,QAAAA,IAAI,EAAC;AADb,OAAN;;AAMZ;AAAS,aAAOE,KAAP;AA9Bb;AAiCC,CAlCM","sourcesContent":["const i={\r\n    list:[]\r\n}\r\nexport const todoreducers=(state=i,action)=>{\r\nswitch (action.type) {\r\n    case \"AddTODO\":\r\n        const {id , data} =action.payload\r\n        return {\r\n          if (data ='') {\r\n             \r\n          }\r\n          ,\r\n          \r\n            ...state,list:[\r\n                ...state.list,\r\n                {\r\n                    id:id,\r\n             data:data\r\n            }]\r\n        }\r\n        case \"DELTODO\":\r\n        const newlist =    state.list.filter((elem)=>elem.id !== action.id)\r\n            return{\r\n    \r\n                    ...state,list:newlist\r\n\r\n            }\r\n            case 'TODOREM':\r\n                return{\r\n                    ...state, list:[]\r\n                }\r\n\r\n        \r\n\r\n    default: return state;\r\n}\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}